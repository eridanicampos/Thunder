// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectTest.Infrastructure.Data.Context;

#nullable disable

namespace ProjectTest.Infrastructure.Data.Migrations
{
    [DbContext(typeof(ProjectTestContext))]
    [Migration("20240630231823_Criar Tabelas Pedido EnderecoEntrega")]
    partial class CriarTabelasPedidoEnderecoEntrega
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectTest.Domain.Entities.AcessoUsuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("acesso_usuario", (string)null);
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.EnderecoEntrega", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("bairro");

                    b.Property<string>("CEP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("cep");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("cidade");

                    b.Property<string>("Complemento")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("complemento");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("estado");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<string>("Numero")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("numero");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("rua");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usuario_id");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("endereco_entrega", (string)null);
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.Pedido", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime?>("DataHoraEntrega")
                        .HasColumnType("datetime2")
                        .HasColumnName("data_entrega");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("descricao");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<string>("NumeroPedido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("numero_pedido");

                    b.Property<string>("StatusEntrega")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("status_entrega");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.Property<Guid>("UsuarioId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("usuario_id");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("valor");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("pedido", (string)null);
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.Usuario", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at")
                        .HasComment("When this entity was created in this DB");

                    b.Property<string>("CreatedByUserId")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("created_by_user_id")
                        .HasComment("The id of the user who did create");

                    b.Property<DateTime?>("DeleteAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at")
                        .HasComment("When this entity was deleted in this DB");

                    b.Property<string>("DeletedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("deleted_by_user_id")
                        .HasComment("The id of the user who did the delete");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("email");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false)
                        .HasColumnName("is_deleted")
                        .HasComment("The field that identifies that the entity was deleted");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("nome");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("senha");

                    b.Property<DateTime?>("UpdateAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("update_at")
                        .HasComment("When this entity was modified the last time");

                    b.Property<string>("UpdatedByUserId")
                        .HasColumnType("VARCHAR(100)")
                        .HasColumnName("update_by_user_id")
                        .HasComment("The id of the user who did the last modification");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.AcessoUsuario", b =>
                {
                    b.HasOne("ProjectTest.Domain.Entities.Usuario", "Usuario")
                        .WithMany("AcessosUsuarios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.EnderecoEntrega", b =>
                {
                    b.HasOne("ProjectTest.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Enderecos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.Pedido", b =>
                {
                    b.HasOne("ProjectTest.Domain.Entities.Usuario", "Usuario")
                        .WithMany("Pedidos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("ProjectTest.Domain.Entities.Usuario", b =>
                {
                    b.Navigation("AcessosUsuarios");

                    b.Navigation("Enderecos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
